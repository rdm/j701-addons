ZUNMR2 overwrites the general complex m-by-n matrix C with

where Q is a complex unitary matrix defined as the product of k
elementary reflectors


      Q = H(1)' H(2)' . . . H(k)'


as returned by ZGERQF. Q is of order m if SIDE = 'L' and of order n if
SIDE = 'R'.


Arguments
=========

SIDE    (input) CHARACTER*1
        = 'L': apply Q or Q' from the Left

        = 'R': apply Q or Q' from the Right

TRANS   (input) CHARACTER*1

        = 'N': apply Q  (No transpose)

        = 'C': apply Q' (Conjugate transpose)

M       (input) INTEGER
        The number of rows of the matrix C. M >= 0.

N       (input) INTEGER
        The number of columns of the matrix C. N >= 0.

K       (input) INTEGER
        The number of elementary reflectors whose product defines
        the matrix Q.
        If SIDE = 'L', M >= K >= 0;
        if SIDE = 'R', N >= K >= 0.

A       (input) COMPLEX*16 array, dimension
        (LDA,M) if SIDE = 'L',
        (LDA,N) if SIDE = 'R'
        The i-th row must contain the vector which defines the
        elementary reflector H(i), for i = 1,2,...,k, as returned by
        ZGERQF in the last k rows of its array argument A.
        A is modified by the routine but restored on exit.

LDA     (input) INTEGER
        The leading dimension of the array A. LDA >= max(1,K).

TAU     (input) COMPLEX*16 array, dimension (K)
        TAU(i) must contain the scalar factor of the elementary
        reflector H(i), as returned by ZGERQF.

C       (input/output) COMPLEX*16 array, dimension (LDC,N)
        On entry, the m-by-n matrix C.
        On exit, C is overwritten by Q*C or Q'*C or C*Q' or C*Q.

LDC     (input) INTEGER
        The leading dimension of the array C. LDC >= max(1,M).

WORK    (workspace) COMPLEX*16 array, dimension
        (N) if SIDE = 'L',
        (M) if SIDE = 'R'

INFO    (output) INTEGER
        = 0: successful exit

        < 0: if INFO = -i, the i-th argument had an illegal value
