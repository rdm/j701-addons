DLAGTM performs a matrix-vector product of the form


Arguments
=========

TRANS   (input) CHARACTER
        Specifies the operation applied to A.
        = 'N':  No transpose, B := alpha * A * X + beta * B

        = 'T':  Transpose,    B := alpha * A'* X + beta * B

        = 'C':  Conjugate transpose = Transpose

N       (input) INTEGER
        The order of the matrix A.  N >= 0.

NRHS    (input) INTEGER
        The number of right hand sides, i.e., the number of columns
        of the matrices X and B.

ALPHA   (input) DOUBLE PRECISION
        The scalar alpha.  ALPHA must be 0., 1., or -1.; otherwise,
        it is assumed to be 0.

DL      (input) DOUBLE PRECISION array, dimension (N-1)
        The (n-1) sub-diagonal elements of T.

D       (input) DOUBLE PRECISION array, dimension (N)
        The diagonal elements of T.

DU      (input) DOUBLE PRECISION array, dimension (N-1)
        The (n-1) super-diagonal elements of T.

X       (input) DOUBLE PRECISION array, dimension (LDX,NRHS)
        The N by NRHS matrix X.

LDX     (input) INTEGER
        The leading dimension of the array X.  LDX >= max(N,1).

BETA    (input) DOUBLE PRECISION
        The scalar beta.  BETA must be 0., 1., or -1.; otherwise,
        it is assumed to be 1.

B       (input/output) DOUBLE PRECISION array, dimension (LDB,NRHS)
        On entry, the N by NRHS matrix B.
        On exit, B is overwritten by the matrix expression
        B := alpha * A * X + beta * B.

LDB     (input) INTEGER
        The leading dimension of the array B.  LDB >= max(N,1).
