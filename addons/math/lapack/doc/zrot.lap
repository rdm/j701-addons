ZROT   applies a plane rotation, where the cos (C) is real and the sin
(S) is complex, and the vectors CX and CY are complex.


Arguments
=========

N       (input) INTEGER
        The number of elements in the vectors CX and CY.

CX      (input/output) COMPLEX*16 array, dimension (N)
        On input, the vector X.
        On output, CX is overwritten with C*X + S*Y.

INCX    (input) INTEGER
        The increment between successive values of CY.  INCX <> 0.

CY      (input/output) COMPLEX*16 array, dimension (N)
        On input, the vector Y.
        On output, CY is overwritten with -CONJG(S)*X + C*Y.

INCY    (input) INTEGER
        The increment between successive values of CY.  INCX <> 0.

C       (input) DOUBLE PRECISION


S       (input) COMPLEX*16
        C and S define a rotation
        [  C          S  ]
        [ -conjg(S)   C  ]
        where C*C + S*CONJG(S) = 1.0.
