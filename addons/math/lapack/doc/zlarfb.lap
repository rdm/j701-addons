ZLARFB applies a complex block reflector H or its transpose H' to a
complex M-by-N matrix C, from either the left or the right.


Arguments
=========

SIDE    (input) CHARACTER*1
        = 'L': apply H or H' from the Left

        = 'R': apply H or H' from the Right

TRANS   (input) CHARACTER*1

        = 'N': apply H (No transpose)

        = 'C': apply H' (Conjugate transpose)

DIRECT  (input) CHARACTER*1
        Indicates how H is formed from a product of elementary
        reflectors
        = 'F': H = H(1) H(2) . . . H(k) (Forward)

        = 'B': H = H(k) . . . H(2) H(1) (Backward)

STOREV  (input) CHARACTER*1
        Indicates how the vectors which define the elementary
        reflectors are stored:

        = 'C': Columnwise

        = 'R': Rowwise

M       (input) INTEGER
        The number of rows of the matrix C.

N       (input) INTEGER
        The number of columns of the matrix C.

K       (input) INTEGER
        The order of the matrix T (= the number of elementary
        reflectors whose product defines the block reflector).

V       (input) COMPLEX*16 array, dimension
        (LDV,K) if STOREV = 'C'
        (LDV,M) if STOREV = 'R' and SIDE = 'L'
        (LDV,N) if STOREV = 'R' and SIDE = 'R'
        The matrix V. See further details.

LDV     (input) INTEGER
        The leading dimension of the array V.
        If STOREV = 'C' and SIDE = 'L', LDV >= max(1,M);
        if STOREV = 'C' and SIDE = 'R', LDV >= max(1,N);
        if STOREV = 'R', LDV >= K.

T       (input) COMPLEX*16 array, dimension (LDT,K)
        The triangular K-by-K matrix T in the representation of the
        block reflector.

LDT     (input) INTEGER
        The leading dimension of the array T. LDT >= K.

C       (input/output) COMPLEX*16 array, dimension (LDC,N)
        On entry, the M-by-N matrix C.
        On exit, C is overwritten by H*C or H'*C or C*H or C*H'.

LDC     (input) INTEGER
        The leading dimension of the array C. LDC >= max(1,M).

WORK    (workspace) COMPLEX*16 array, dimension (LDWORK,K)


LDWORK  (input) INTEGER
        The leading dimension of the array WORK.
        If SIDE = 'L', LDWORK >= max(1,N);
        if SIDE = 'R', LDWORK >= max(1,M).
